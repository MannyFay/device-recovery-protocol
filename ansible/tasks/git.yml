#------------------------------------------------------------------------------
#----- device-recovery-protocol

- name: Checking, if device-recovery-protocol repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/device-recovery-protocol"
  register: device_recovery_protocol_repository

- name: Clone device-recovery-protocol repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/device-recovery-protocol.git"
    dest: "{{ personal_github_directory }}/device-recovery-protocol"
  when: device_recovery_protocol_repository.stat.exists == False

- name: Fetch content of device-recovery-protocol remote repository
  shell: cd "{{ personal_github_directory }}/device-recovery-protocol" && git fetch origin
  when: device_recovery_protocol_repository.stat.exists == False

- name: Update Git remote URL of device-recovery-protocol repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/device-recovery-protocol/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/device-recovery-protocol.git'
    line: '        url = git@github.com:MannyFay/device-recovery-protocol.git'
  when: device_recovery_protocol_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- dotfiles

- name: Checking, if dotfiles repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/dotfiles"
  register: dotfiles_repository

- name: Clone dotfiles repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/dotfiles.git"
    dest: "{{ personal_github_directory }}/dotfiles"
  when: dotfiles_repository.stat.exists == False

- name: Fetch content of dotfiles remote repository
  shell: cd "{{ personal_github_directory }}/dotfiles" && git fetch origin
  when: dotfiles_repository.stat.exists == False

- name: Update Git remote URL of local dotfiles repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/dotfiles/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/dotfiles.git'
    line: '        url = git@github.com:MannyFay/dotfiles.git'
  when: dotfiles_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- mannydark.nvim

- name: Checking, if mannydark.nvim repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/mannydark.nvim"
  register: mannydark_nvim_repository

- name: Clone mannydark.nvim repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/mannydark.nvim.git"
    dest: "{{ personal_github_directory }}/mannydark.nvim"
  when: mannydark_nvim_repository.stat.exists == False

- name: Fetch content of mannydark.nvim remote repository
  shell: cd "{{ personal_github_directory }}/mannydark.nvim" && git fetch origin
  when: mannydark_nvim_repository.stat.exists == False

- name: Update Git remote URL of local mannydark.nvim repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/mannydark.nvim/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/mannydark.nvim.git'
    line: '        url = git@github.com:MannyFay/mannydark.nvim.git'
  when: mannydark_nvim_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- nvim

- name: Checking, if nvim repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/nvim"
  register: nvim_repository

- name: Clone nvim repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/nvim.git"
    dest: "{{ personal_github_directory }}/nvim"
  when: nvim_repository.stat.exists == False

- name: Fetch content of nvim remote repository
  shell: cd "{{ personal_github_directory }}/nvim" && git fetch origin
  when: nvim_repository.stat.exists == False

- name: Update Git remote URL of local nvim repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/mannydark.nvim/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/nvim.git'
    line: '        url = git@github.com:MannyFay/nvim.git'
  when: nvim_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- set-up-dev-machine

- name: Checking, if set-up-dev-machine repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/set-up-dev-machine"
  register: set_up_dev_machine_repository

- name: Clone set-up-dev-machine repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/set-up-dev-machine.git"
    dest: "{{ personal_github_directory }}/set-up-dev-machine"
  when: set_up_dev_machine_repository.stat.exists == False

- name: Fetch content of set-up-dev-machine remote repository
  shell: cd "{{ personal_github_directory }}/set-up-dev-machine" && git fetch origin
  when: set_up_dev_machine_repository.stat.exists == False

- name: Update Git remote URL of local set-up-dev-machine repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/set-up-dev-machine/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/set-up-dev-machine.git'
    line: '        url = git@github.com:MannyFay/set-up-dev-machine.git'
  when: set_up_dev_machine_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- short-cuts-and-commands

- name: Checking, if short-cuts-and-commands repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/short-cuts-and-commands"
  register: short_cuts_and_commands_repository

- name: Clone short-cuts-and-commands repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/short-cuts-and-commands.git"
    dest: "{{ personal_github_directory }}/short-cuts-and-commands"
  when: short_cuts_and_commands_repository.stat.exists == False

- name: Fetch content of short-cuts-and-commands remote repository
  shell: cd "{{ personal_github_directory }}/short-cuts-and-commands" && git fetch origin
  when: short_cuts_and_commands_repository.stat.exists == False

- name: Update Git remote URL of local short-cuts-and-commands repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/short-cuts-and-commands/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/short-cuts-and-commands.git'
    line: '        url = git@github.com:MannyFay/short-cuts-and-commands.git'
  when: short_cuts_and_commands_repository.stat.exists == False



#------------------------------------------------------------------------------
#----- Contributions 
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
#----- everest-app

- name: Checking, if everest-app repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/contributions/everest-app"
  register: everest_app_repository

- name: Clone everest-app repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/everest-app.git"
    dest: "{{ personal_github_directory }}/contributions/everest-app"
  when: everest_app_repository.stat.exists == False

- name: Fetch content of everest-app remote repository
  shell: cd "{{ personal_github_directory }}/contributions/everest-app" && git fetch origin
  when: everest_app_repository.stat.exists == False

- name: Update Git remote URL of local everest-app repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/contributions/everest-app/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/everest-app.git'
    line: '        url = git@github.com:MannyFay/everest-app.git'
  when: everest_app_repository.stat.exists == False


#------------------------------------------------------------------------------
#----- everest-container

- name: Checking, if everest-container repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/contributions/everest-container"
  register: everest_container_repository

- name: Clone everest-container repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/everest-container.git"
    dest: "{{ personal_github_directory }}/contributions/everest-container"
  when: everest_container_repository.stat.exists == False

- name: Fetch content of everest-container remote repository
  shell: cd "{{ personal_github_directory }}/contributions/everest-container" && git fetch origin
  when: everest_container_repository.stat.exists == False

- name: Update Git remote URL of local everest-container repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/contributions/everest-container/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/everest-container.git'
    line: '        url = git@github.com:MannyFay/everest-container.git'
  when: everest_container_repository.stat.exists == False


#------------------------------------------------------------------------------
#----- everest-http

- name: Checking, if everest-http repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/contributions/everest-http"
  register: everest_http_repository

- name: Clone everest-http repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/everest-http.git"
    dest: "{{ personal_github_directory }}/contributions/everest-http"
  when: everest_http_repository.stat.exists == False

- name: Fetch content of everest-http remote repository
  shell: cd "{{ personal_github_directory }}/contributions/everest-http" && git fetch origin
  when: everest_http_repository.stat.exists == False

- name: Update Git remote URL of local everest-http repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/contributions/everest-http/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/everest-http.git'
    line: '        url = git@github.com:MannyFay/everest-http.git'
  when: everest_http_repository.stat.exists == False


#------------------------------------------------------------------------------
#----- everest-validation

- name: Checking, if everest-validation repository exists already on disk
  stat:
    path: "{{ personal_github_directory }}/contributions/everest-validation"
  register: everest_validation_repository

- name: Clone everest-validation repository if it not exists already on disk
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: "https://github.com/MannyFay/everest-validation.git"
    dest: "{{ personal_github_directory }}/contributions/everest-validation"
  when: everest_validation_repository.stat.exists == False

- name: Fetch content of everest-validation remote repository
  shell: cd "{{ personal_github_directory }}/contributions/everest-validation" && git fetch origin
  when: everest_validation_repository.stat.exists == False

- name: Update Git remote URL of local everest-validation repository to use SSH
  ansible.builtin.lineinfile:
    path: "{{ personal_github_directory }}/contributions/everest-validation/.git/config"
    regexp: '^(\s*)url\s*=\s*https://github.com/MannyFay/everest-validation.git'
    line: '        url = git@github.com:MannyFay/everest-validation.git'
  when: everest_validation_repository.stat.exists == False








# After everything, make ansible ssh (if this work while ansible runs?!?)
#- name: Checking, if dotfiles repository exists already on disk
#  stat:
#    path: "{{ personal_github_directory }}/dotfiles"
#  register: dotfiles_repository
#
#- name: Clone dotfiles repository if it not exists already on disk
#  become_user: "{{ username }}"
#  ansible.builtin.git:
#    repo: "https://github.com/MannyFay/dotfiles.git"
#    dest: "{{ personal_github_directory }}/dotfiles"
#  when: dotfiles_repository.stat.exists == False
#
#- name: Fetch content of remote repository
#  shell: cd "{{ personal_github_directory }}/dotfiles" && git fetch

- name: Remove .gitconfig file from ~/ if it exists already
  become: true
  command: rm -f "{{ lookup('env', 'HOME') }}/.gitconfig"

- name: Link Global Git Configuration File
  become: true
  become_user: "{{ username }}"
  command: "{{ item }}"
  with_items:
    - ln -s "{{ personal_github_directory }}/dotfiles/git/account-config/global" "{{ lookup('env', 'HOME') }}/.gitconfig"

- name: Remove .gitignore file from ~/ if it exists already
  become: true
  command: rm -f "{{ lookup('env', 'HOME') }}/.gitignore"

- name: Link Global Git Ignore File
  become: true
  become_user: "{{ username }}"
  command: "{{ item }}"
  with_items:
    - ln -s "{{ personal_github_directory }}/dotfiles/git/gitignore" "{{ lookup('env', 'HOME') }}/.gitignore"